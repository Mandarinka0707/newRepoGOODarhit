basePath: /api/v1
definitions:
  controller.HTTPLoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  controller.HTTPRegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  entity.ErrorResponse:
    properties:
      error:
        example: invalid request
        type: string
    type: object
  usecase.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  usecase.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Authentication and authorization service for the forum
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Auth Service API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Логин по имени пользователя и паролю
      parameters:
      - description: Данные для входа
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      summary: Авторизация пользователя
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя
      parameters:
      - description: Данные для регистрации
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/usecase.RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: user_id
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      summary: Регистрация пользователя
      tags:
      - auth
  /auth/user/{id}:
    get:
      consumes:
      - application/json
      description: Получает информацию о пользователе по ID через HTTP
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Ответ с данными пользователя
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      summary: Получить информацию о пользователе через HTTP
      tags:
      - auth
  /auth/validate-token:
    post:
      consumes:
      - application/json
      description: Проверяет валидность токена и возвращает информацию о пользователе
      produces:
      - application/json
      responses:
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/entity.ErrorResponse'
      summary: Проверка валидности токена через gRPC
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
  BasicAuth:
    type: basic
swagger: "2.0"
