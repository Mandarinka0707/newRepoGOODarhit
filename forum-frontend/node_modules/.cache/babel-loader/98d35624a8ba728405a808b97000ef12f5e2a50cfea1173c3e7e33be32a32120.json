{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  useEffect(() => {\n    if (!url) return;\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setConnectionStatus('unauthenticated');\n      return;\n    }\n\n    // Закрываем предыдущее соединение при изменении токена\n    if (socket) {\n      socket.close();\n    }\n    const ws = new WebSocket(`${url}?token=${encodeURIComponent(token)}`);\n    window.activeWebSocket = ws; // Сохраняем ссылку\n\n    ws.onopen = () => {\n      setConnectionStatus('connected');\n      setSocket(ws);\n    };\n    ws.onmessage = event => {\n      const newMessage = JSON.parse(event.data);\n      setMessages(prev => [...prev, newMessage]);\n    };\n    ws.onclose = () => {\n      setConnectionStatus('disconnected');\n      setSocket(null);\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n      setConnectionStatus('error');\n    };\n    return () => {\n      if (ws.readyState === WebSocket.OPEN) {\n        ws.close();\n      }\n    };\n  }, [url, localStorage.getItem('token')]); // Добавляем зависимость от токена\n\n  const sendMessage = message => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      const currentUser = {\n        userId: localStorage.getItem('userId'),\n        username: localStorage.getItem('username')\n      };\n      socket.send(JSON.stringify({\n        ...message,\n        ...currentUser\n      }));\n    }\n  };\n  return {\n    socket,\n    messages,\n    sendMessage,\n    connectionStatus\n  };\n};\n_s(useWebSocket, \"IhKKRB2Nnw9qvmZutzwECZ0X7o4=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useWebSocket","url","_s","socket","setSocket","messages","setMessages","connectionStatus","setConnectionStatus","token","localStorage","getItem","close","ws","WebSocket","encodeURIComponent","window","activeWebSocket","onopen","onmessage","event","newMessage","JSON","parse","data","prev","onclose","onerror","error","console","readyState","OPEN","sendMessage","message","currentUser","userId","username","send","stringify"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useWebSocket = (url) => {\n    const [socket, setSocket] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\n\n    useEffect(() => {\n        if (!url) return;\n\n        const token = localStorage.getItem('token');\n        if (!token) {\n            setConnectionStatus('unauthenticated');\n            return;\n        }\n\n        // Закрываем предыдущее соединение при изменении токена\n        if (socket) {\n            socket.close();\n        }\n\n        const ws = new WebSocket(`${url}?token=${encodeURIComponent(token)}`);\n        window.activeWebSocket = ws; // Сохраняем ссылку\n\n        ws.onopen = () => {\n            setConnectionStatus('connected');\n            setSocket(ws);\n        };\n\n        ws.onmessage = (event) => {\n            const newMessage = JSON.parse(event.data);\n            setMessages(prev => [...prev, newMessage]);\n        };\n\n        ws.onclose = () => {\n            setConnectionStatus('disconnected');\n            setSocket(null);\n        };\n\n        ws.onerror = (error) => {\n            console.error('WebSocket error:', error);\n            setConnectionStatus('error');\n        };\n\n        return () => {\n            if (ws.readyState === WebSocket.OPEN) {\n                ws.close();\n            }\n        };\n    }, [url, localStorage.getItem('token')]); // Добавляем зависимость от токена\n\n    const sendMessage = (message) => {\n        if (socket && socket.readyState === WebSocket.OPEN) {\n            const currentUser = {\n                userId: localStorage.getItem('userId'),\n                username: localStorage.getItem('username')\n            };\n            socket.send(JSON.stringify({...message, ...currentUser}));\n        }\n    };\n\n    return { socket, messages, sendMessage, connectionStatus };\n};\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,cAAc,CAAC;EAExEC,SAAS,CAAC,MAAM;IACZ,IAAI,CAACE,GAAG,EAAE;IAEV,MAAMQ,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACRD,mBAAmB,CAAC,iBAAiB,CAAC;MACtC;IACJ;;IAEA;IACA,IAAIL,MAAM,EAAE;MACRA,MAAM,CAACS,KAAK,CAAC,CAAC;IAClB;IAEA,MAAMC,EAAE,GAAG,IAAIC,SAAS,CAAC,GAAGb,GAAG,UAAUc,kBAAkB,CAACN,KAAK,CAAC,EAAE,CAAC;IACrEO,MAAM,CAACC,eAAe,GAAGJ,EAAE,CAAC,CAAC;;IAE7BA,EAAE,CAACK,MAAM,GAAG,MAAM;MACdV,mBAAmB,CAAC,WAAW,CAAC;MAChCJ,SAAS,CAACS,EAAE,CAAC;IACjB,CAAC;IAEDA,EAAE,CAACM,SAAS,GAAIC,KAAK,IAAK;MACtB,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;MACzClB,WAAW,CAACmB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,UAAU,CAAC,CAAC;IAC9C,CAAC;IAEDR,EAAE,CAACa,OAAO,GAAG,MAAM;MACflB,mBAAmB,CAAC,cAAc,CAAC;MACnCJ,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC;IAEDS,EAAE,CAACc,OAAO,GAAIC,KAAK,IAAK;MACpBC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCpB,mBAAmB,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,OAAO,MAAM;MACT,IAAIK,EAAE,CAACiB,UAAU,KAAKhB,SAAS,CAACiB,IAAI,EAAE;QAClClB,EAAE,CAACD,KAAK,CAAC,CAAC;MACd;IACJ,CAAC;EACL,CAAC,EAAE,CAACX,GAAG,EAAES,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1C,MAAMqB,WAAW,GAAIC,OAAO,IAAK;IAC7B,IAAI9B,MAAM,IAAIA,MAAM,CAAC2B,UAAU,KAAKhB,SAAS,CAACiB,IAAI,EAAE;MAChD,MAAMG,WAAW,GAAG;QAChBC,MAAM,EAAEzB,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;QACtCyB,QAAQ,EAAE1B,YAAY,CAACC,OAAO,CAAC,UAAU;MAC7C,CAAC;MACDR,MAAM,CAACkC,IAAI,CAACf,IAAI,CAACgB,SAAS,CAAC;QAAC,GAAGL,OAAO;QAAE,GAAGC;MAAW,CAAC,CAAC,CAAC;IAC7D;EACJ,CAAC;EAED,OAAO;IAAE/B,MAAM;IAAEE,QAAQ;IAAE2B,WAAW;IAAEzB;EAAiB,CAAC;AAC9D,CAAC;AAACL,EAAA,CA5DIF,YAAY;AA8DlB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}