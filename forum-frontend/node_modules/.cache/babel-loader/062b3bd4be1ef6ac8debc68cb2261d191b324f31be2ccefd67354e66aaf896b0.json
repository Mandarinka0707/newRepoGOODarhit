{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  refreshTrigger\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchPosts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication token not found');\n      }\n      const response = await axios.get('http://localhost:8081/posts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.data || !Array.isArray(response.data)) {\n        throw new Error('Invalid data structure received from server');\n      }\n\n      // Validate and normalize posts data\n      const validatedPosts = response.data.filter(post => {\n        // First filter out completely invalid posts\n        if (!post.id) {\n          console.error('Invalid post missing ID:', post);\n          return false;\n        }\n        return true;\n      }).map(post => ({\n        // Then ensure all fields exist\n        id: post.id,\n        title: post.title || 'Untitled Post',\n        content: post.content || 'No content available',\n        author_id: post.author_id || 'Unknown',\n        created_at: post.created_at || new Date().toISOString()\n      }));\n      setPosts(validatedPosts);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Post fetch error:', {\n        error: err,\n        response: err.response\n      });\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'Failed to load posts. Please try again later.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, [refreshTrigger]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPosts,\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list\",\n    children: posts.length > 0 ? [...posts].reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"By: \", post.author_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" | \", new Date(post.created_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this)]\n    }, `post-${post.id}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"no-posts\",\n      children: \"No posts available yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PostList","refreshTrigger","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","token","localStorage","getItem","Error","response","get","headers","data","Array","isArray","validatedPosts","filter","post","id","console","map","title","content","author_id","created_at","Date","toISOString","err","_err$response","_err$response$data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","reverse","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\n\nconst PostList = ({ refreshTrigger }) => {\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const fetchPosts = async () => {\n        try {\n            setLoading(true);\n            setError(null);\n            \n            const token = localStorage.getItem('token');\n            if (!token) {\n                throw new Error('Authentication token not found');\n            }\n\n            const response = await axios.get('http://localhost:8081/posts', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json'\n                }\n            });\n\n            if (!response.data || !Array.isArray(response.data)) {\n                throw new Error('Invalid data structure received from server');\n            }\n\n            // Validate and normalize posts data\n            const validatedPosts = response.data\n                .filter(post => {  // First filter out completely invalid posts\n                    if (!post.id) {\n                        console.error('Invalid post missing ID:', post);\n                        return false;\n                    }\n                    return true;\n                })\n                .map(post => ({  // Then ensure all fields exist\n                    id: post.id,\n                    title: post.title || 'Untitled Post',\n                    content: post.content || 'No content available',\n                    author_id: post.author_id || 'Unknown',\n                    created_at: post.created_at || new Date().toISOString()\n                }));\n\n            setPosts(validatedPosts);\n        } catch (err) {\n            console.error('Post fetch error:', {\n                error: err,\n                response: err.response\n            });\n            \n            setError(\n                err.response?.data?.message || \n                err.message || \n                'Failed to load posts. Please try again later.'\n            );\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchPosts();\n    }, [refreshTrigger]);\n\n    if (loading) {\n        return <div className=\"loading\">Loading posts...</div>;\n    }\n\n    if (error) {\n        return (\n            <div className=\"error\">\n                <p>{error}</p>\n                <button onClick={fetchPosts}>Retry</button>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"post-list\">\n            {posts.length > 0 ? (\n                [...posts].reverse().map(post => (\n                    <div key={`post-${post.id}`} className=\"post\">\n                        <h3>{post.title}</h3>\n                        <p>{post.content}</p>\n                        <div className=\"post-meta\">\n                            <span>By: {post.author_id}</span>\n                            <span> | {new Date(post.created_at).toLocaleString()}</span>\n                        </div>\n                    </div>\n                ))\n            ) : (\n                <p className=\"no-posts\">No posts available yet.</p>\n            )}\n        </div>\n    );\n};\n\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}