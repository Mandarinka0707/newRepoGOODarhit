{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get('http://localhost:8081/posts', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Accept': 'application/json'\n          }\n        });\n        if (response.data && Array.isArray(response.data)) {\n          setPosts(response.data);\n        } else {\n          throw new Error('Invalid posts data format');\n        }\n      } catch (err) {\n        console.error('Error fetching posts:', err);\n        setError(err.message || 'Failed to load posts');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPosts();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading posts...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list-container\",\n    children: posts.length > 0 ? [...posts].reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Created by User ID: \", post.author_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["PostList","_s","posts","setPosts","useState","loading","setLoading","error","setError","useEffect","fetchPosts","token","localStorage","getItem","response","axios","get","headers","data","Array","isArray","Error","err","console","message","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","reverse","map","post","title","content","author_id","id","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js"],"sourcesContent":["const PostList = () => {\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const token = localStorage.getItem('token');\n                const response = await axios.get('http://localhost:8081/posts', {\n                    headers: {\n                        'Authorization': `Bearer ${token}`,\n                        'Accept': 'application/json'\n                    }\n                });\n                \n                if (response.data && Array.isArray(response.data)) {\n                    setPosts(response.data);\n                } else {\n                    throw new Error('Invalid posts data format');\n                }\n            } catch (err) {\n                console.error('Error fetching posts:', err);\n                setError(err.message || 'Failed to load posts');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchPosts();\n    }, []);\n\n    if (loading) {\n        return <div className=\"loading\">Loading posts...</div>;\n    }\n\n    if (error) {\n        return <div className=\"error\">Error: {error}</div>;\n    }\n\n    return (\n        <div className=\"post-list-container\">\n            {posts.length > 0 ? (\n                [...posts].reverse().map(post => (\n                    <div key={post.id} className=\"post-item\">\n                        <h3>{post.title}</h3>\n                        <p>{post.content}</p>\n                        <small>Created by User ID: {post.author_id}</small>\n                    </div>\n                ))\n            ) : (\n                <p>No posts available.</p>\n            )}\n        </div>\n    );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}