{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport PostList from './components/Posts/PostList';\nimport CreatePost from './components/Posts/CreatePost';\nimport MainLayout from './components/Layout/MainLayout';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Проверяем валидность токена\n          await axios.get('http://localhost:8081/validate', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          setIsAuthenticated(true);\n        } catch (error) {\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n    checkAuth();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(MainLayout, {\n      isAuthenticated: isAuthenticated,\n      setIsAuthenticated: setIsAuthenticated,\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            setIsAuthenticated: setIsAuthenticated\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/register\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 31\n          }, this) : /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 58\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/posts\",\n          element: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(CreatePost, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: isAuthenticated ? \"/posts\" : \"/login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"Ax+B/BOELR06clzL32vENhaokmk=\");\n_c = App;\nexport default App;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\n// import Login from './components/Auth/Login';\n// import Register from './components/Auth/Register';\n// import PostList from './components/Posts/PostList';\n// import CreatePost from './components/Posts/CreatePost';\n// import MainLayout from './components/Layout/MainLayout';\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n// const PrivateRoute = ({ children }) => {\n//     const token = localStorage.getItem('token');\n//     return token ? children : <Navigate to=\"/login\" />;\n// };\n\n// const App = () => {\n//     const [refreshPosts, setRefreshPosts] = useState(false);\n\n//     const onPostCreated = () => {\n//         setRefreshPosts(prev => !prev); // Триггер для обновления списка\n//     };\n\n//     return (\n//         <Router>\n//             <MainLayout>\n//                 <Routes>\n//                 <Route path=\"/register\" element={<Register />} />\n//                     <Route path=\"/login\" element={<Login />} />\n\n//                     <Route path=\"/posts\" element={\n//                         <PrivateRoute>\n//                             <>\n//                                 <CreatePost onPostCreated={() => window.location.reload()} />\n//                                 <PostList />\n//                             </>\n//                         </PrivateRoute>\n//                     } />\n//                     <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n//                 </Routes>\n//             </MainLayout>\n//         </Router>\n//     );\n// };\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","Navigate","axios","Login","Register","PostList","CreatePost","MainLayout","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isAuthenticated","setIsAuthenticated","loading","setLoading","checkAuth","token","localStorage","getItem","get","headers","error","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","to","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Login from './components/Auth/Login';\nimport Register from './components/Auth/Register';\nimport PostList from './components/Posts/PostList';\nimport CreatePost from './components/Posts/CreatePost';\nimport MainLayout from './components/Layout/MainLayout';\nimport '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n\n\nconst App = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Проверяем валидность токена\n          await axios.get('http://localhost:8081/validate', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          setIsAuthenticated(true);\n        } catch (error) {\n          localStorage.removeItem('token');\n        }\n      }\n      setLoading(false);\n    };\n\n    checkAuth();\n  }, []);\n\n  if (loading) {\n    return <div className=\"loading\">Loading...</div>;\n  }\n\n  return (\n    <Router>\n      <MainLayout isAuthenticated={isAuthenticated} setIsAuthenticated={setIsAuthenticated}>\n        <Routes>\n          <Route path=\"/login\" element={\n            isAuthenticated ? <Navigate to=\"/posts\" /> : <Login setIsAuthenticated={setIsAuthenticated} />\n          } />\n          <Route path=\"/register\" element={\n            isAuthenticated ? <Navigate to=\"/posts\" /> : <Register />\n          } />\n          <Route path=\"/posts\" element={\n            isAuthenticated ? (\n              <>\n                <CreatePost />\n                <PostList />\n              </>\n            ) : <Navigate to=\"/posts\" />\n          } />\n          <Route path=\"/\" element={\n            <Navigate to={isAuthenticated ? \"/posts\" : \"/login\"} />\n          } />\n        </Routes>\n      </MainLayout>\n    </Router>\n  );\n};\n\nexport default App;\n// import React, { useState } from 'react';\n// import { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\n// import Login from './components/Auth/Login';\n// import Register from './components/Auth/Register';\n// import PostList from './components/Posts/PostList';\n// import CreatePost from './components/Posts/CreatePost';\n// import MainLayout from './components/Layout/MainLayout';\n// import '/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/MainLayout.css';\n\n\n\n\n// const PrivateRoute = ({ children }) => {\n//     const token = localStorage.getItem('token');\n//     return token ? children : <Navigate to=\"/login\" />;\n// };\n\n// const App = () => {\n//     const [refreshPosts, setRefreshPosts] = useState(false);\n\n//     const onPostCreated = () => {\n//         setRefreshPosts(prev => !prev); // Триггер для обновления списка\n//     };\n\n//     return (\n//         <Router>\n//             <MainLayout>\n//                 <Routes>\n//                 <Route path=\"/register\" element={<Register />} />\n//                     <Route path=\"/login\" element={<Login />} />\n                   \n//                     <Route path=\"/posts\" element={\n//                         <PrivateRoute>\n//                             <>\n//                                 <CreatePost onPostCreated={() => window.location.reload()} />\n//                                 <PostList />\n//                             </>\n//                         </PrivateRoute>\n//                     } />\n//                     <Route path=\"/\" element={<Navigate to=\"/login\" />} />\n//                 </Routes>\n//             </MainLayout>\n//         </Router>\n//     );\n// };\n// export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}