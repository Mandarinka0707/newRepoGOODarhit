{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  refreshTrigger\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const fetchPosts = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication token not found');\n      }\n      const response = await axios.get('http://localhost:8081/posts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      });\n\n      // Проверка структуры ответа\n      if (!response.data || !Array.isArray(response.data)) {\n        throw new Error('Invalid data structure received from server');\n      }\n\n      // Валидация и нормализация данных\n      const validatedPosts = response.data.map((post, index) => {\n        return {\n          id: post.id || `temp-id-${index}-${Date.now()}`,\n          title: post.title || 'Untitled Post',\n          content: post.content || 'No content available',\n          author_id: post.author_id || 'Unknown',\n          created_at: post.created_at || new Date().toISOString()\n        };\n      });\n      setPosts(validatedPosts);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error details:', {\n        error: err,\n        response: err.response,\n        message: err.message\n      });\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message || 'An unknown error occurred while fetching posts');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, [refreshTrigger]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list-loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-list-error\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Error: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPosts,\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list-container\",\n    children: posts.length > 0 ? [...posts].reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author: \", post.author_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" | Date: \", new Date(post.created_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-posts-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts found. Create the first one!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"FFSFm1bVdM1s2gLh8ffGbsIvlRY=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PostList","refreshTrigger","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","token","localStorage","getItem","Error","response","get","headers","data","Array","isArray","validatedPosts","map","post","index","id","Date","now","title","content","author_id","created_at","toISOString","err","_err$response","_err$response$data","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","reverse","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\n\nconst PostList = ({ refreshTrigger }) => {\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const fetchPosts = async () => {\n        try {\n            setLoading(true);\n            setError(null);\n            \n            const token = localStorage.getItem('token');\n            if (!token) {\n                throw new Error('Authentication token not found');\n            }\n\n            const response = await axios.get('http://localhost:8081/posts', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json'\n                }\n            });\n\n            // Проверка структуры ответа\n            if (!response.data || !Array.isArray(response.data)) {\n                throw new Error('Invalid data structure received from server');\n            }\n\n            // Валидация и нормализация данных\n            const validatedPosts = response.data.map((post, index) => {\n                return {\n                    id: post.id || `temp-id-${index}-${Date.now()}`,\n                    title: post.title || 'Untitled Post',\n                    content: post.content || 'No content available',\n                    author_id: post.author_id || 'Unknown',\n                    created_at: post.created_at || new Date().toISOString()\n                };\n            });\n\n            setPosts(validatedPosts);\n        } catch (err) {\n            console.error('Error details:', {\n                error: err,\n                response: err.response,\n                message: err.message\n            });\n            \n            setError(\n                err.response?.data?.message || \n                err.message || \n                'An unknown error occurred while fetching posts'\n            );\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchPosts();\n    }, [refreshTrigger]);\n\n    if (loading) {\n        return (\n            <div className=\"post-list-loading\">\n                <div className=\"spinner\"></div>\n                <p>Loading posts...</p>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"post-list-error\">\n                <p>Error: {error}</p>\n                <button \n                    onClick={fetchPosts}\n                    className=\"retry-button\"\n                >\n                    Retry\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"post-list-container\">\n            {posts.length > 0 ? (\n                [...posts].reverse().map(post => (\n                    <div key={post.id} className=\"post-item\">\n                        <h3>{post.title}</h3>\n                        <p>{post.content}</p>\n                        <div className=\"post-meta\">\n                            <span>Author: {post.author_id}</span>\n                            <span> | Date: {new Date(post.created_at).toLocaleString()}</span>\n                        </div>\n                    </div>\n                ))\n            ) : (\n                <div className=\"no-posts-message\">\n                    <p>No posts found. Create the first one!</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PostList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}