{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePost = ({\n  onPostCreated\n}) => {\n  _s();\n  const [newPost, setNewPost] = useState({\n    title: '',\n    content: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewPost(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const createPost = async () => {\n    try {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('You need to login first');\n        return;\n      }\n\n      // Проверка заполнения полей\n      if (!newPost.title.trim() || !newPost.content.trim()) {\n        alert('Title and content are required!');\n        return;\n      }\n      const response = await axios.post('http://localhost:8081/posts', newPost, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setNewPost({\n        title: '',\n        content: ''\n      });\n      onPostCreated();\n      alert('Post created successfully!');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error creating post:', error);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error creating post. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-post-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Create New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"title\",\n      placeholder: \"Title\",\n      value: newPost.title,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"content\",\n      placeholder: \"Content\",\n      value: newPost.content,\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createPost,\n      children: \"Create Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePost, \"z+aI85AltG6uai6Cw/8OGQ3Erh0=\");\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","CreatePost","onPostCreated","_s","newPost","setNewPost","title","content","handleInputChange","e","name","value","target","prev","createPost","token","localStorage","getItem","alert","trim","response","post","headers","error","_error$response","_error$response$data","console","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/CreatePost.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\n\nconst CreatePost = ({ onPostCreated }) => {\n    const [newPost, setNewPost] = useState({ \n        title: '', \n        content: '' \n    });\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setNewPost(prev => ({\n            ...prev,\n            [name]: value\n        }));\n    };\n\n    const createPost = async () => {\n        try {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                alert('You need to login first');\n                return;\n            }\n\n            // Проверка заполнения полей\n            if (!newPost.title.trim() || !newPost.content.trim()) {\n                alert('Title and content are required!');\n                return;\n            }\n\n            const response = await axios.post('http://localhost:8081/posts', newPost, {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Content-Type': 'application/json'\n                }\n            });\n            \n            setNewPost({ title: '', content: '' });\n            onPostCreated();\n            alert('Post created successfully!');\n        } catch (error) {\n            console.error('Error creating post:', error);\n            alert(error.response?.data?.error || 'Error creating post. Please try again.');\n        }\n    };\n\n    return (\n        <div className=\"create-post-container\">\n            <h3>Create New Post</h3>\n            <input\n                type=\"text\"\n                name=\"title\"\n                placeholder=\"Title\"\n                value={newPost.title}\n                onChange={handleInputChange}\n            />\n            <textarea\n                name=\"content\"\n                placeholder=\"Content\"\n                value={newPost.content}\n                onChange={handleInputChange}\n            />\n            <button onClick={createPost}>Create Post</button>\n        </div>\n    );\n};\n\nexport default CreatePost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC;IACnCS,KAAK,EAAE,EAAE;IACTC,OAAO,EAAE;EACb,CAAC,CAAC;EAEF,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAChCP,UAAU,CAACQ,IAAI,KAAK;MAChB,GAAGA,IAAI;MACP,CAACH,IAAI,GAAGC;IACZ,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAI,CAACF,KAAK,EAAE;QACRG,KAAK,CAAC,yBAAyB,CAAC;QAChC;MACJ;;MAEA;MACA,IAAI,CAACd,OAAO,CAACE,KAAK,CAACa,IAAI,CAAC,CAAC,IAAI,CAACf,OAAO,CAACG,OAAO,CAACY,IAAI,CAAC,CAAC,EAAE;QAClDD,KAAK,CAAC,iCAAiC,CAAC;QACxC;MACJ;MAEA,MAAME,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,IAAI,CAAC,6BAA6B,EAAEjB,OAAO,EAAE;QACtEkB,OAAO,EAAE;UACL,eAAe,EAAE,UAAUP,KAAK,EAAE;UAClC,cAAc,EAAE;QACpB;MACJ,CAAC,CAAC;MAEFV,UAAU,CAAC;QAAEC,KAAK,EAAE,EAAE;QAAEC,OAAO,EAAE;MAAG,CAAC,CAAC;MACtCL,aAAa,CAAC,CAAC;MACfgB,KAAK,CAAC,4BAA4B,CAAC;IACvC,CAAC,CAAC,OAAOK,KAAK,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACZC,OAAO,CAACH,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CL,KAAK,CAAC,EAAAM,eAAA,GAAAD,KAAK,CAACH,QAAQ,cAAAI,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBG,IAAI,cAAAF,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,wCAAwC,CAAC;IAClF;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAK4B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClC7B,OAAA;MAAA6B,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBjC,OAAA;MACIkC,IAAI,EAAC,MAAM;MACXxB,IAAI,EAAC,OAAO;MACZyB,WAAW,EAAC,OAAO;MACnBxB,KAAK,EAAEP,OAAO,CAACE,KAAM;MACrB8B,QAAQ,EAAE5B;IAAkB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFjC,OAAA;MACIU,IAAI,EAAC,SAAS;MACdyB,WAAW,EAAC,SAAS;MACrBxB,KAAK,EAAEP,OAAO,CAACG,OAAQ;MACvB6B,QAAQ,EAAE5B;IAAkB;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFjC,OAAA;MAAQqC,OAAO,EAAEvB,UAAW;MAAAe,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEd,CAAC;AAAC9B,EAAA,CA/DIF,UAAU;AAAAqC,EAAA,GAAVrC,UAAU;AAiEhB,eAAeA,UAAU;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}