{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = ({\n  refreshTrigger\n}) => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Wrap fetchPosts in useCallback to prevent unnecessary re-creations\n  const fetchPosts = useCallback(async () => {\n    let isMounted = true;\n    try {\n      setLoading(true);\n      setError(null);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        throw new Error('Authentication token not found');\n      }\n      const response = await axios.get('http://localhost:8081/posts', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Accept': 'application/json'\n        }\n      });\n      if (!isMounted) return;\n\n      // Check for proper response structure\n      if (!response.data || !response.data.data || !Array.isArray(response.data.data)) {\n        throw new Error('Invalid data structure received from server');\n      }\n\n      // Process posts from response.data.data instead of response.data\n      const processedPosts = response.data.data.filter(post => {\n        if (!(post !== null && post !== void 0 && post.id)) {\n          console.error('Post missing ID:', post);\n          return false;\n        }\n        return true;\n      }).map(post => ({\n        id: post.id,\n        title: post.title || 'Untitled Post',\n        content: post.content || 'No content available',\n        author_id: post.author_id || 'Unknown',\n        created_at: post.created_at || new Date().toISOString()\n      }));\n      setPosts(processedPosts);\n    } catch (err) {\n      // ... rest of the error handling remains the same\n    }\n  }, []);\n  useEffect(() => {\n    const abortController = new AbortController();\n    fetchPosts();\n    return () => {\n      abortController.abort(); // Cancel pending request on unmount\n    };\n  }, [fetchPosts, refreshTrigger]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading posts...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchPosts,\n        className: \"retry-button\",\n        children: \"Retry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list-container\",\n    children: posts.length > 0 ? [...posts].reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-meta\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author: \", post.author_id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" | Date: \", new Date(post.created_at).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }, this)]\n    }, `post-${post.id}`, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-posts-message\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts found. Create the first one!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"ceanigLo5UJLcgro04MxQYgiEJI=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","axios","jsxDEV","_jsxDEV","PostList","refreshTrigger","_s","posts","setPosts","loading","setLoading","error","setError","fetchPosts","isMounted","token","localStorage","getItem","Error","response","get","headers","data","Array","isArray","processedPosts","filter","post","id","console","map","title","content","author_id","created_at","Date","toISOString","err","abortController","AbortController","abort","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","reverse","toLocaleString","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\n\nconst PostList = ({ refreshTrigger }) => {\n    const [posts, setPosts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // Wrap fetchPosts in useCallback to prevent unnecessary re-creations\n    const fetchPosts = useCallback(async () => {\n        let isMounted = true;\n    \n        try {\n            setLoading(true);\n            setError(null);\n    \n            const token = localStorage.getItem('token');\n            if (!token) {\n                throw new Error('Authentication token not found');\n            }\n    \n            const response = await axios.get('http://localhost:8081/posts', {\n                headers: {\n                    'Authorization': `Bearer ${token}`,\n                    'Accept': 'application/json'\n                }\n            });\n    \n            if (!isMounted) return;\n    \n            // Check for proper response structure\n            if (!response.data || !response.data.data || !Array.isArray(response.data.data)) {\n                throw new Error('Invalid data structure received from server');\n            }\n    \n            // Process posts from response.data.data instead of response.data\n            const processedPosts = response.data.data\n                .filter(post => {\n                    if (!post?.id) {\n                        console.error('Post missing ID:', post);\n                        return false;\n                    }\n                    return true;\n                })\n                .map(post => ({\n                    id: post.id,\n                    title: post.title || 'Untitled Post',\n                    content: post.content || 'No content available',\n                    author_id: post.author_id || 'Unknown',\n                    created_at: post.created_at || new Date().toISOString()\n                }));\n    \n            setPosts(processedPosts);\n        } catch (err) {\n            // ... rest of the error handling remains the same\n        }\n    }, []);\n\n    useEffect(() => {\n        const abortController = new AbortController();\n\n        fetchPosts();\n\n        return () => {\n            abortController.abort(); // Cancel pending request on unmount\n        };\n    }, [fetchPosts, refreshTrigger]);\n\n    if (loading) {\n        return (\n            <div className=\"loading-container\">\n                <div className=\"spinner\"></div>\n                <p>Loading posts...</p>\n            </div>\n        );\n    }\n\n    if (error) {\n        return (\n            <div className=\"error-container\">\n                <p className=\"error-message\">{error}</p>\n                <button\n                    onClick={fetchPosts}\n                    className=\"retry-button\"\n                >\n                    Retry\n                </button>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"post-list-container\">\n            {posts.length > 0 ? (\n                [...posts].reverse().map(post => (\n                    <div key={`post-${post.id}`} className=\"post-item\">\n                        <h3>{post.title}</h3>\n                        <p>{post.content}</p>\n                        <div className=\"post-meta\">\n                            <span>Author: {post.author_id}</span>\n                            <span> | Date: {new Date(post.created_at).toLocaleString()}</span>\n                        </div>\n                    </div>\n                ))\n            ) : (\n                <div className=\"no-posts-message\">\n                    <p>No posts found. Create the first one!</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PostList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}