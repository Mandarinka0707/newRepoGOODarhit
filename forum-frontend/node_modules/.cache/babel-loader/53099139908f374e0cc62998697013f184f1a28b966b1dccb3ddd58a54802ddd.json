{"ast":null,"code":"var _jsxFileName = \"/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      try {\n        const response = await axios.get('http://localhost:8081/posts', {\n          headers: {\n            'Accept': 'application/json'\n          }\n        });\n        setPosts(response.data);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error fetching posts:', error);\n        alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Failed to load posts');\n      }\n    };\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-list-container\",\n    children: posts && posts.length > 0 ? [...posts].reverse().map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: [\"Created by User ID: \", post.author_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this)]\n    }, post.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 21\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No posts available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n_s(PostList, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PostList","_s","posts","setPosts","fetchPosts","response","get","headers","data","error","_error$response","_error$response$data","console","alert","className","children","length","reverse","map","post","title","fileName","_jsxFileName","lineNumber","columnNumber","content","author_id","id","_c","$RefreshReg$"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/components/Posts/PostList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../MainLayout.css';\n\nconst PostList = () => {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            try {\n                const response = await axios.get('http://localhost:8081/posts', {\n                    headers: {\n                        'Accept': 'application/json'\n                    }\n                });\n                setPosts(response.data);\n            } catch (error) {\n                console.error('Error fetching posts:', error);\n                alert(error.response?.data?.error || 'Failed to load posts');\n            }\n        };\n\n        fetchPosts();\n    }, []);\n\n    return (\n        <div className=\"post-list-container\">\n            {posts && posts.length > 0 ? (\n                [...posts].reverse().map(post => (\n                    <div key={post.id} className=\"post-item\">\n                        <h3>{post.title}</h3>\n                        <p>{post.content}</p>\n                        <small>Created by User ID: {post.author_id}</small>\n                    </div>\n                ))\n            ) : (\n                <p>No posts available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default PostList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACZ,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,6BAA6B,EAAE;UAC5DC,OAAO,EAAE;YACL,QAAQ,EAAE;UACd;QACJ,CAAC,CAAC;QACFJ,QAAQ,CAACE,QAAQ,CAACG,IAAI,CAAC;MAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;QAAA,IAAAC,eAAA,EAAAC,oBAAA;QACZC,OAAO,CAACH,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CI,KAAK,CAAC,EAAAH,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBF,IAAI,cAAAG,oBAAA,uBAApBA,oBAAA,CAAsBF,KAAK,KAAI,sBAAsB,CAAC;MAChE;IACJ,CAAC;IAEDL,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKe,SAAS,EAAC,qBAAqB;IAAAC,QAAA,EAC/Bb,KAAK,IAAIA,KAAK,CAACc,MAAM,GAAG,CAAC,GACtB,CAAC,GAAGd,KAAK,CAAC,CAACe,OAAO,CAAC,CAAC,CAACC,GAAG,CAACC,IAAI,iBACzBpB,OAAA;MAAmBe,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACpChB,OAAA;QAAAgB,QAAA,EAAKI,IAAI,CAACC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBzB,OAAA;QAAAgB,QAAA,EAAII,IAAI,CAACM;MAAO;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBzB,OAAA;QAAAgB,QAAA,GAAO,sBAAoB,EAACI,IAAI,CAACO,SAAS;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,GAH7CL,IAAI,CAACQ,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIZ,CACR,CAAC,gBAEFzB,OAAA;MAAAgB,QAAA,EAAG;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC5B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACvB,EAAA,CApCID,QAAQ;AAAA4B,EAAA,GAAR5B,QAAQ;AAsCd,eAAeA,QAAQ;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}