{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  useEffect(() => {\n    if (!url) return;\n    let reconnectAttempts = 0;\n    const maxReconnectAttempts = 5;\n    let ws;\n    const connect = () => {\n      const token = localStorage.getItem('token');\n      if (!token) {\n        setConnectionStatus('unauthenticated');\n        return;\n      }\n      ws = new WebSocket(`${url}?token=${encodeURIComponent(token)}`);\n      ws.onopen = () => {\n        console.log('WebSocket connected');\n        reconnectAttempts = 0;\n        setSocket(ws);\n        setConnectionStatus('connected');\n      };\n      ws.onmessage = event => {\n        try {\n          const newMessage = JSON.parse(event.data);\n          setMessages(prev => [...prev, newMessage]);\n        } catch (err) {\n          console.error('Error parsing message:', err);\n        }\n      };\n      ws.onclose = e => {\n        console.log('WebSocket disconnected:', e.code, e.reason);\n        setSocket(null);\n        if (e.code !== 1000 && reconnectAttempts < maxReconnectAttempts) {\n          setTimeout(() => {\n            reconnectAttempts++;\n            setConnectionStatus('reconnecting');\n            connect();\n          }, 5000);\n        } else {\n          setConnectionStatus('disconnected');\n        }\n      };\n      ws.onerror = error => {\n        console.error('WebSocket error:', error);\n        setConnectionStatus('error');\n      };\n    };\n    connect();\n    return () => {\n      if (ws && ws.readyState === WebSocket.OPEN) {\n        ws.close(1000, 'Component unmounted');\n      }\n    };\n  }, [url]);\n  const sendMessage = message => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(JSON.stringify(message));\n    } else {\n      console.error('Cannot send message - WebSocket not connected');\n    }\n  };\n  return {\n    socket,\n    messages,\n    sendMessage,\n    connectionStatus\n  };\n};\n_s(useWebSocket, \"IhKKRB2Nnw9qvmZutzwECZ0X7o4=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useWebSocket","url","_s","socket","setSocket","messages","setMessages","connectionStatus","setConnectionStatus","reconnectAttempts","maxReconnectAttempts","ws","connect","token","localStorage","getItem","WebSocket","encodeURIComponent","onopen","console","log","onmessage","event","newMessage","JSON","parse","data","prev","err","error","onclose","e","code","reason","setTimeout","onerror","readyState","OPEN","close","sendMessage","message","send","stringify"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useWebSocket = (url) => {\n    const [socket, setSocket] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\n\n    useEffect(() => {\n        if (!url) return;\n\n        let reconnectAttempts = 0;\n        const maxReconnectAttempts = 5;\n        let ws;\n\n        const connect = () => {\n            const token = localStorage.getItem('token');\n            if (!token) {\n                setConnectionStatus('unauthenticated');\n                return;\n            }\n\n            ws = new WebSocket(`${url}?token=${encodeURIComponent(token)}`);\n\n            ws.onopen = () => {\n                console.log('WebSocket connected');\n                reconnectAttempts = 0;\n                setSocket(ws);\n                setConnectionStatus('connected');\n            };\n\n            ws.onmessage = (event) => {\n                try {\n                    const newMessage = JSON.parse(event.data);\n                    setMessages(prev => [...prev, newMessage]);\n                } catch (err) {\n                    console.error('Error parsing message:', err);\n                }\n            };\n\n            ws.onclose = (e) => {\n                console.log('WebSocket disconnected:', e.code, e.reason);\n                setSocket(null);\n                if (e.code !== 1000 && reconnectAttempts < maxReconnectAttempts) {\n                    setTimeout(() => {\n                        reconnectAttempts++;\n                        setConnectionStatus('reconnecting');\n                        connect();\n                    }, 5000);\n                } else {\n                    setConnectionStatus('disconnected');\n                }\n            };\n\n            ws.onerror = (error) => {\n                console.error('WebSocket error:', error);\n                setConnectionStatus('error');\n            };\n        };\n\n        connect();\n\n        return () => {\n            if (ws && ws.readyState === WebSocket.OPEN) {\n                ws.close(1000, 'Component unmounted');\n            }\n        };\n    }, [url]);\n\n    const sendMessage = (message) => {\n        if (socket && socket.readyState === WebSocket.OPEN) {\n            socket.send(JSON.stringify(message));\n        } else {\n            console.error('Cannot send message - WebSocket not connected');\n        }\n    };\n\n    return { socket, messages, sendMessage, connectionStatus };\n};\n\nexport default useWebSocket;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}