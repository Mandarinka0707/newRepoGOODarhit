{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useWebSocket = url => {\n  _s();\n  const [socket, setSocket] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      setConnectionStatus('unauthenticated');\n      return;\n    }\n\n    // Добавляем токен в URL WebSocket\n    const wsUrl = new URL(url);\n    wsUrl.searchParams.append('token', token);\n    const ws = new WebSocket(wsUrl.toString());\n    ws.onopen = () => {\n      console.log('WebSocket connected');\n      setSocket(ws);\n      setConnectionStatus('connected');\n    };\n    ws.onmessage = event => {\n      try {\n        const newMessage = JSON.parse(event.data);\n        setMessages(prev => [...prev, newMessage]);\n      } catch (err) {\n        console.error('Error parsing message:', err);\n      }\n    };\n    ws.onclose = () => {\n      console.log('WebSocket disconnected');\n      setSocket(null);\n      setConnectionStatus('disconnected');\n      // Автопереподключение через 5 секунд\n      setTimeout(() => {\n        setConnectionStatus('reconnecting');\n      }, 5000);\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n      setConnectionStatus('error');\n    };\n    return () => {\n      if (ws && ws.readyState === WebSocket.OPEN) {\n        ws.close();\n      }\n    };\n  }, [url]);\n  const sendMessage = message => {\n    if (socket && socket.readyState === WebSocket.OPEN) {\n      socket.send(JSON.stringify(message));\n    } else {\n      console.error('Cannot send message - WebSocket not connected');\n    }\n  };\n  return {\n    socket,\n    messages,\n    sendMessage,\n    connectionStatus\n  };\n};\n_s(useWebSocket, \"IhKKRB2Nnw9qvmZutzwECZ0X7o4=\");\nexport default useWebSocket;","map":{"version":3,"names":["useState","useEffect","useWebSocket","url","_s","socket","setSocket","messages","setMessages","connectionStatus","setConnectionStatus","token","localStorage","getItem","wsUrl","URL","searchParams","append","ws","WebSocket","toString","onopen","console","log","onmessage","event","newMessage","JSON","parse","data","prev","err","error","onclose","setTimeout","onerror","readyState","OPEN","close","sendMessage","message","send","stringify"],"sources":["/Users/darinautalieva/Desktop/GOProject/forum-frontend/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nconst useWebSocket = (url) => {\n    const [socket, setSocket] = useState(null);\n    const [messages, setMessages] = useState([]);\n    const [connectionStatus, setConnectionStatus] = useState('disconnected');\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            setConnectionStatus('unauthenticated');\n            return;\n        }\n\n        // Добавляем токен в URL WebSocket\n        const wsUrl = new URL(url);\n        wsUrl.searchParams.append('token', token);\n        \n        const ws = new WebSocket(wsUrl.toString());\n        \n        ws.onopen = () => {\n            console.log('WebSocket connected');\n            setSocket(ws);\n            setConnectionStatus('connected');\n        };\n\n        ws.onmessage = (event) => {\n            try {\n                const newMessage = JSON.parse(event.data);\n                setMessages(prev => [...prev, newMessage]);\n            } catch (err) {\n                console.error('Error parsing message:', err);\n            }\n        };\n\n        ws.onclose = () => {\n            console.log('WebSocket disconnected');\n            setSocket(null);\n            setConnectionStatus('disconnected');\n            // Автопереподключение через 5 секунд\n            setTimeout(() => {\n                setConnectionStatus('reconnecting');\n            }, 5000);\n        };\n\n        ws.onerror = (error) => {\n            console.error('WebSocket error:', error);\n            setConnectionStatus('error');\n        };\n\n        return () => {\n            if (ws && ws.readyState === WebSocket.OPEN) {\n                ws.close();\n            }\n        };\n    }, [url]);\n\n    const sendMessage = (message) => {\n        if (socket && socket.readyState === WebSocket.OPEN) {\n            socket.send(JSON.stringify(message));\n        } else {\n            console.error('Cannot send message - WebSocket not connected');\n        }\n    };\n\n    return { socket, messages, sendMessage, connectionStatus };\n};\n\nexport default useWebSocket;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,cAAc,CAAC;EAExEC,SAAS,CAAC,MAAM;IACZ,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAI,CAACF,KAAK,EAAE;MACRD,mBAAmB,CAAC,iBAAiB,CAAC;MACtC;IACJ;;IAEA;IACA,MAAMI,KAAK,GAAG,IAAIC,GAAG,CAACZ,GAAG,CAAC;IAC1BW,KAAK,CAACE,YAAY,CAACC,MAAM,CAAC,OAAO,EAAEN,KAAK,CAAC;IAEzC,MAAMO,EAAE,GAAG,IAAIC,SAAS,CAACL,KAAK,CAACM,QAAQ,CAAC,CAAC,CAAC;IAE1CF,EAAE,CAACG,MAAM,GAAG,MAAM;MACdC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;MAClCjB,SAAS,CAACY,EAAE,CAAC;MACbR,mBAAmB,CAAC,WAAW,CAAC;IACpC,CAAC;IAEDQ,EAAE,CAACM,SAAS,GAAIC,KAAK,IAAK;MACtB,IAAI;QACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAACI,IAAI,CAAC;QACzCrB,WAAW,CAACsB,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAEJ,UAAU,CAAC,CAAC;MAC9C,CAAC,CAAC,OAAOK,GAAG,EAAE;QACVT,OAAO,CAACU,KAAK,CAAC,wBAAwB,EAAED,GAAG,CAAC;MAChD;IACJ,CAAC;IAEDb,EAAE,CAACe,OAAO,GAAG,MAAM;MACfX,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;MACrCjB,SAAS,CAAC,IAAI,CAAC;MACfI,mBAAmB,CAAC,cAAc,CAAC;MACnC;MACAwB,UAAU,CAAC,MAAM;QACbxB,mBAAmB,CAAC,cAAc,CAAC;MACvC,CAAC,EAAE,IAAI,CAAC;IACZ,CAAC;IAEDQ,EAAE,CAACiB,OAAO,GAAIH,KAAK,IAAK;MACpBV,OAAO,CAACU,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;MACxCtB,mBAAmB,CAAC,OAAO,CAAC;IAChC,CAAC;IAED,OAAO,MAAM;MACT,IAAIQ,EAAE,IAAIA,EAAE,CAACkB,UAAU,KAAKjB,SAAS,CAACkB,IAAI,EAAE;QACxCnB,EAAE,CAACoB,KAAK,CAAC,CAAC;MACd;IACJ,CAAC;EACL,CAAC,EAAE,CAACnC,GAAG,CAAC,CAAC;EAET,MAAMoC,WAAW,GAAIC,OAAO,IAAK;IAC7B,IAAInC,MAAM,IAAIA,MAAM,CAAC+B,UAAU,KAAKjB,SAAS,CAACkB,IAAI,EAAE;MAChDhC,MAAM,CAACoC,IAAI,CAACd,IAAI,CAACe,SAAS,CAACF,OAAO,CAAC,CAAC;IACxC,CAAC,MAAM;MACHlB,OAAO,CAACU,KAAK,CAAC,+CAA+C,CAAC;IAClE;EACJ,CAAC;EAED,OAAO;IAAE3B,MAAM;IAAEE,QAAQ;IAAEgC,WAAW;IAAE9B;EAAiB,CAAC;AAC9D,CAAC;AAACL,EAAA,CAhEIF,YAAY;AAkElB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}